#include <stdlib.h>
#include <stdio.h>
#include <string.h>

static int DEBUG = 0;

int                usage();
char*    generatePattern( const char* );
void        tryToProcess( char*, const char* );
void             process( FILE*, const char* );
char*           readline( FILE* );
void processPreformatted( char* line, FILE*, const char* pattern );

int main( int argc, char** argv )
{
	Arguments args( argc, files );
	if ( ! args.contains( "-p" ) ) return usage();

	String* pattern = new FormattedString( "~%s~", args.getValue( "-p" ) );
	{
		Iterator* it = args.files();
		while ( it->hasNext() )
		{
			tryToProcess( it->next(), pattern );
		}
		delete it;
	}
	delete pattern;
}

	int usage()
	{
		fprintf( stderr, "Usage:\n\textract -p <pattern> <file> [more files] [ > output file ]\n" );
		return -1;
	}
	
	void tryToProcess( const String& filename, const String& pattern )
	{
		File file( filename );
		if ( file.open( "r" ) )
		{
			process( file, pattern );
			file.close();
		}
	}
	
		void process( File& file, const String& pattern )
		{
			LineParser lp( new FileInputStream( file ) );
			
			bool inside;
			while ( ! lp.hasFinished() )
			{
				String* line = lp.readLine();
				{
					if ( line->startsWith( pattern ) )
					{
						inside = true;
					}
					else if ( line->startsWith( "~" ) )
					{
						inside = false;
					}
					else
					{
						if ( inside ) System::out.println( line );
					}
				}
				delete line;
			}
		}
